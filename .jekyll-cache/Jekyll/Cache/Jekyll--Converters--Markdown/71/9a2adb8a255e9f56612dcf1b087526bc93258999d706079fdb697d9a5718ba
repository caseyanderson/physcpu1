I"Ç<h2 id="materials">Materials</h2>

<ul>
  <li>laptop</li>
  <li>internet access</li>
  <li>Jupyter Notebook dev environment</li>
</ul>

<h2 id="for-loops">for loops</h2>

<p><code class="language-plaintext highlighter-rouge">for</code> loops allow one to iterate (repeat) over a collection or sequence. Abstractly all <code class="language-plaintext highlighter-rouge">for</code> loops share this structure:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span> <span class="n">item</span> <span class="ow">in</span> <span class="n">collection</span><span class="p">:</span>
  <span class="n">do</span> <span class="n">something</span>
</code></pre></div></div>

<p>But its often easier to understand them in action.</p>

<p><em>For Example</em></p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">x</span> <span class="o">=</span> <span class="s">"Mary had a little lamb"</span>
<span class="n">x</span> <span class="o">=</span> <span class="n">x</span><span class="p">.</span><span class="n">split</span><span class="p">(</span><span class="s">' '</span><span class="p">)</span>

<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">x</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">i</span><span class="p">))</span>
</code></pre></div></div>

<p>Above we store a sample sentence at <code class="language-plaintext highlighter-rouge">x</code> and then split that sentence by space, producing a list of words that we then store at <code class="language-plaintext highlighter-rouge">x</code> (overwriting the original sentence in the process). Next we enter the <code class="language-plaintext highlighter-rouge">for</code> loop, which could be read as follows: <code class="language-plaintext highlighter-rouge">for</code> every word (<code class="language-plaintext highlighter-rouge">i</code>) in the list (<code class="language-plaintext highlighter-rouge">x</code>) print the word (<code class="language-plaintext highlighter-rouge">i</code>) and its length (or number of letters).</p>

<h3 id="for-loops-with-range">for loops with range()</h3>

<p>One can also use a <code class="language-plaintext highlighter-rouge">for</code> loop to count by iterating across a <code class="language-plaintext highlighter-rouge">range</code>.</p>

<p>A single value in <code class="language-plaintext highlighter-rouge">range</code> is interpreted as the <code class="language-plaintext highlighter-rouge">stop</code> value (the start value defaults to <code class="language-plaintext highlighter-rouge">0</code> in this case).</p>

<p><em>For Example</em></p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">5</span><span class="p">):</span>
  <span class="k">print</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">range(x,y)</code>, however, allows one to specify the <code class="language-plaintext highlighter-rouge">start</code> value and the <code class="language-plaintext highlighter-rouge">stop</code> value.</p>

<p><em>For Example</em></p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="mi">10</span><span class="p">):</span>
  <span class="k">print</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
</code></pre></div></div>

<p>Optionally one can specify the <code class="language-plaintext highlighter-rouge">step</code> value by setting the third parameter.</p>

<p><em>For Example</em></p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">15</span><span class="p">,</span><span class="mi">3</span><span class="p">):</span>
   <span class="k">print</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
</code></pre></div></div>

<p>In the above example we increment, or add, by <code class="language-plaintext highlighter-rouge">3</code> until we reach the number <code class="language-plaintext highlighter-rouge">15</code> (starting from <code class="language-plaintext highlighter-rouge">0</code>).</p>

<p>Decrementing, or counting down, is accomplished by setting the <code class="language-plaintext highlighter-rouge">start</code> value high and <code class="language-plaintext highlighter-rouge">step</code> to a negative value.</p>

<p><em>For Example</em></p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1024</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">):</span>
   <span class="k">print</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
</code></pre></div></div>

<p>Above we start at <code class="language-plaintext highlighter-rouge">1024</code> and count down, by <code class="language-plaintext highlighter-rouge">-1</code>, until we reach <code class="language-plaintext highlighter-rouge">-1</code>.</p>
:ET