I"‹<h2 id="materials">Materials</h2>

<ul>
  <li>laptop</li>
  <li>internet access</li>
  <li><a href="https://www.adafruit.com/product/3591">Adafruit HUZZAH32</a></li>
  <li><a href="https://www.adafruit.com/product/592">USB cable - USB A to Micro-B - 3 foot long</a> (or similar)</li>
  <li>1x Breadboard</li>
  <li>1x Resistor (220, 270, or 330 Ohms)</li>
  <li>1x LED</li>
</ul>

<h2 id="blinkpy-internal-led">blink.py (internal LED)</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="s">'''
blink.py (internal led)
'''</span>

<span class="kn">import</span> <span class="nn">machine</span>
<span class="kn">import</span> <span class="nn">time</span>

<span class="n">led</span> <span class="o">=</span> <span class="n">machine</span><span class="p">.</span><span class="n">Pin</span><span class="p">(</span><span class="mi">13</span><span class="p">,</span> <span class="n">machine</span><span class="p">.</span><span class="n">Pin</span><span class="p">.</span><span class="n">OUT</span><span class="p">)</span>

<span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
    <span class="n">led</span><span class="p">.</span><span class="n">value</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
    <span class="n">time</span><span class="p">.</span><span class="n">sleep</span><span class="p">(</span><span class="mf">0.5</span><span class="p">)</span>
    <span class="n">led</span><span class="p">.</span><span class="n">value</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
    <span class="n">time</span><span class="p">.</span><span class="n">sleep</span><span class="p">(</span><span class="mf">0.5</span><span class="p">)</span>

</code></pre></div></div>

<h2 id="blinkpy-external-led">blink.py (external LED)</h2>

<h3 id="hookup-pattern">Hookup Pattern</h3>

<p><img src="http://physcpu1.caseyanderson.com//assets/fritzing/blink_external_led.png" alt="" /></p>

<ol>
  <li>Connect ESP32 GND to a blue bus on the side of your breadboard</li>
  <li>From pin 27, connect the following in series: a Resistor to an LED to GND (blue bus)</li>
</ol>

<h2 id="update-blinkpy-for-external-led">update blink.py (for external LED)</h2>

<ol>
  <li>On your laptop open <code class="language-plaintext highlighter-rouge">blink.py</code> in Jupyter Notebook and change the pin number from <code class="language-plaintext highlighter-rouge">13</code> to <code class="language-plaintext highlighter-rouge">27</code>: <code class="language-plaintext highlighter-rouge">jupyter notebook blink.py</code></li>
  <li>Delete the previous version of <code class="language-plaintext highlighter-rouge">blink.py</code> from the ESP32: <code class="language-plaintext highlighter-rouge">ampy -p /dev/tty.SLAB_USBtoUART rm blink.py</code></li>
  <li>Write the new version of <code class="language-plaintext highlighter-rouge">blink.py</code> to the ESP32: <code class="language-plaintext highlighter-rouge">ampy -p /dev/tty.SLAB_USBtoUART put blink.py</code></li>
  <li>Connect to ESP32 via <code class="language-plaintext highlighter-rouge">screen</code>: <code class="language-plaintext highlighter-rouge">screen /dev/tty.SLAB_USBtoUART 115200</code></li>
  <li>Run <code class="language-plaintext highlighter-rouge">blink.py</code>: <code class="language-plaintext highlighter-rouge">import blink.py</code></li>
  <li>Ctrl-C to stop <code class="language-plaintext highlighter-rouge">blink.py</code></li>
  <li>Exit <code class="language-plaintext highlighter-rouge">screen</code>: Ctrl-A Ctrl-\</li>
</ol>

<h2 id="blink_ifpy-external-led--if-statement">blink_if.py (external LED + if statement)</h2>

<p>Another way to blink an LED is to use <a href="https://en.wikipedia.org/wiki/Boolean_algebra">Boolean logic</a>. In the example below we check to see if the <code class="language-plaintext highlighter-rouge">led.value</code> is <code class="language-plaintext highlighter-rouge">0</code> (or off). If the LED is off we turn it back on (<code class="language-plaintext highlighter-rouge">led.value(1)</code>), otherwise, we turn the led off (<code class="language-plaintext highlighter-rouge">led.value(0)</code>). We repeatedly check <code class="language-plaintext highlighter-rouge">led.value()</code> by wrapping this <code class="language-plaintext highlighter-rouge">if</code> statement in a <code class="language-plaintext highlighter-rouge">while</code> loop, which will run forever.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="s">'''
blink w/ if statement
'''</span>

<span class="kn">import</span> <span class="nn">machine</span>
<span class="kn">import</span> <span class="nn">time</span>

<span class="n">led</span> <span class="o">=</span> <span class="n">machine</span><span class="p">.</span><span class="n">Pin</span><span class="p">(</span><span class="mi">27</span><span class="p">,</span> <span class="n">machine</span><span class="p">.</span><span class="n">Pin</span><span class="p">.</span><span class="n">OUT</span><span class="p">)</span>

<span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
  <span class="k">if</span> <span class="n">led</span><span class="p">.</span><span class="n">value</span><span class="p">()</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
    <span class="n">led</span><span class="p">.</span><span class="n">value</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
  <span class="k">else</span><span class="p">:</span>
    <span class="n">led</span><span class="p">.</span><span class="n">value</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
  <span class="n">time</span><span class="p">.</span><span class="n">sleep</span><span class="p">(</span><span class="mf">0.5</span><span class="p">)</span>
</code></pre></div></div>

:ET